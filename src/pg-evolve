#!/bin/sh
set -e

function error() {
  local number=${1}
  shift
  local message=${1}
  shift

  echo "ERROR: ${message}" && exit ${number}
}

[ -z "${PGHOST}"  ] && error 2 "\$PGHOST is not defined"
[ -z "${PGEVOLVE_INSTALL_PATH}"  ] && error 2 "\$PGEVOLVE_INSTALL_PATH is not defined"
[ -z "${PGEVOLVE_EVOLUTIONS_PATH}"  ] && error 2 "\$PGEVOLVE_EVOLUTIONS_PATH is not defined"

tables=$(psql -t -c "SELECT tablename FROM pg_catalog.pg_tables
  WHERE schemaname != 'pg_catalog'
  AND schemaname != 'information_schema';")

if [ -z "$(echo ${tables})" ] || [ ! -z "$(echo ${tables} | grep 'pg_evolve_')" ]; then
  # Install pg-evolve
  find "${PGEVOLVE_INSTALL_PATH}" -name "*.sql" | sort | while read script; do
    psql -f "${script}"
  done
else
  error 3 "Database was not created with pg-evolve! Aborting"
fi

evolutions=$(find "${PGEVOLVE_EVOLUTIONS_PATH}" -name "*.sql" -exec basename {} \; 2> /dev/null | sort)
[ -z "${evolutions}" ] && echo "No evolutions found in ${PGEVOLVE_EVOLUTIONS_PATH}. Exiting" && exit

evolutions_applied=$(psql -t -AF ',' -c "SELECT * FROM pg_evolve_get_evolutions();")
evolutions_count=$(printf "%s\n" "${evolutions}" | wc -l)

for e in $(seq 1 ${evolutions_count})
do
  evolution_local="$(printf "%s\n" ${evolutions} | sed -n "${e}p")"
  evolution_local_file="${PGEVOLVE_EVOLUTIONS_PATH}/${evolution_local}"
  evolution_local_checksum="$(sha256sum "${evolution_local_file}" | cut -d ' ' -f1)"
  evolution_remote_row="$(printf "%s\n" ${evolutions_applied} | sed -n "${e}p")"
  evolution_remote="$(echo ${evolution_remote_row} | cut -d ',' -f1)"
  evolution_remote_checksum="$(echo ${evolution_remote_row} | cut -d ',' -f2)"
  if [ -z "${evolution_remote}" ]; then
    echo "Applying ${evolution_local}"
    psql -v "ON_ERROR_STOP=true" -1 -f "${evolution_local_file}" \
    && psql -c "SELECT pg_evolve_applied('${evolution_local}', '${VERSION}', '${evolution_local_checksum}')" > /dev/null
  elif [ "${evolution_local}" = "${evolution_remote}" ]; then
    if [ "${PGEVOLVE_SKIPCHECKSUMCHECK}" = "true" ] || [ "${evolution_local_checksum}" = "${evolution_remote_checksum}" ]; then
      echo "Evolution ${evolution_local} already applied. Skipping."
    else
      error 5 "Local evolution sequence number ${e} (${evolution_local}) does not match remote checksum! Aborting"
    fi
  else
    error 4 "Local evolution sequence number ${e} (${evolution_local}) does not match remote evolution: ${evolution_remote}"
  fi
done
